name: Build Release Binaries

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ""
          - target: x86_64-pc-windows-msvc
            os: ubuntu-latest
            ext: ".exe"
          - target: x86_64-apple-darwin  # Intel macOS
            os: macos-latest
            ext: ""
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust + Target
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}  # Correct variable syntax
          profile: minimal

      - name: Install Windows Dependencies (Linux Runner)
        if: matrix.os == 'ubuntu-latest' && matrix.target == 'x86_64-pc-windows-msvc'
        run: sudo apt-get install -y gcc-mingw-w64

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/${{ matrix.target }}/release/myapp${{ matrix.ext }}
          asset_name: myapp-${{ github.event.release.tag_name }}-${{ matrix.target }}${{ matrix.ext }}
          asset_content_type: application/octet-stream
