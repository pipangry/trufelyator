name: Build Release Binaries

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            name: linux
            ext: ''
          - runner: macos-latest
            name: macos
            ext: ''
          - runner: windows-latest
            name: windows
            ext: '.exe'
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Release
        run: cargo build --release

      - name: Get architecture
        id: get_arch
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            echo "arch=$(uname -m)" >> $GITHUB_OUTPUT
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "arch=$(uname -m)" >> $GITHUB_OUTPUT
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "arch=$(echo %PROCESSOR_ARCHITECTURE%)" >> $GITHUB_OUTPUT
          fi

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/release/myapp${{ matrix.ext }}
          asset_name: myapp-${{ github.event.release.tag_name }}-${{ steps.get_arch.outputs.arch }}-${{ matrix.name }}${{ matrix.ext }}
